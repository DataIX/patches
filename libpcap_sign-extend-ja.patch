# HG changeset patch
# Parent 49cff7600c12f7ccc805b487db7af7fc7c9c8d68
In userland, sign extend the offset for JA instructions. (libpcap)

diff -r 49cff7600c12 contrib/ipfilter/bpf_filter.c
--- a/contrib/ipfilter/bpf_filter.c
+++ b/contrib/ipfilter/bpf_filter.c
@@ -349,7 +349,18 @@
 			continue;
 
 		case BPF_JMP|BPF_JA:
+#if defined(KERNEL) || defined(_KERNEL)
+	/*
+ 	 * No backward jumps allowed.
+	 */
 			pc += pc->k;
+#else
+	/*
+	 * XXX - we currently implement "ip6 protochain"
+	 * with backward jumps, so sign-extend pc->k.
+	 */
+			pc += (bpf_int32)pc->k;
+#endif
 			continue;
 
 		case BPF_JMP|BPF_JGT|BPF_K:
diff -r 49cff7600c12 contrib/libpcap/net/bpf_filter.c
--- a/contrib/libpcap/net/bpf_filter.c
+++ b/contrib/libpcap/net/bpf_filter.c
@@ -396,7 +396,18 @@
 			continue;
 
 		case BPF_JMP|BPF_JA:
+#if defined(KERNEL) || defined(_KERNEL)
+	/*
+ 	 * No backward jumps allowed.
+	 */
 			pc += pc->k;
+#else
+	/*
+	 * XXX - we currently implement "ip6 protochain"
+	 * with backward jumps, so sign-extend pc->k.
+	 */
+			pc += (bpf_int32)pc->k;
+#endif
 			continue;
 
 		case BPF_JMP|BPF_JGT|BPF_K:
diff -r 49cff7600c12 sys/net/bpf_filter.c
--- a/sys/net/bpf_filter.c
+++ b/sys/net/bpf_filter.c
@@ -376,7 +376,18 @@
 			continue;
 
 		case BPF_JMP|BPF_JA:
+#if defined(KERNEL) || defined(_KERNEL)
+	/*
+ 	 * No backward jumps allowed.
+	 */
 			pc += pc->k;
+#else
+	/*
+	 * XXX - we currently implement "ip6 protochain"
+	 * with backward jumps, so sign-extend pc->k.
+	 */
+			pc += (bpf_int32)pc->k;
+#endif
 			continue;
 
 		case BPF_JMP|BPF_JGT|BPF_K:
